-- MIGRATION: create_client_narrator_permissions_table
--
-- OBJETIVO:
-- Criar uma tabela para armazenar permissões de locutores específicas por cliente,
-- permitindo que o admin sobrescreva as regras dos pacotes.
--
-- ESTRUTURA:
-- - `cliente_id`: O ID do usuário/cliente.
-- - `locutor_id`: O ID do locutor.
-- - `tipo_permissao`: Um ENUM para definir se a permissão é para 'permitir' ou 'bloquear'.
--   - 'permitido': Garante que o cliente veja este locutor, mesmo que seus pacotes não o incluam.
--   - 'bloqueado': Garante que o cliente NÃO veja este locutor, mesmo que seus pacotes o incluam.

-- Passo 1: Criar o tipo ENUM para as permissões
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'tipo_permissao_override') THEN
        CREATE TYPE public.tipo_permissao_override AS ENUM ('permitido', 'bloqueado');
    END IF;
END$$;

-- Passo 2: Criar a tabela de permissões
CREATE TABLE IF NOT EXISTS public.clientes_locutores_permissoes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cliente_id UUID NOT NULL REFERENCES public.profiles(id) ON DELETE CASCADE,
    locutor_id UUID NOT NULL REFERENCES public.locutores(id) ON DELETE CASCADE,
    tipo_permissao public.tipo_permissao_override NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    admin_id_que_modificou UUID REFERENCES public.profiles(id),

    -- Garante que não haja regras conflitantes para o mesmo cliente/locutor
    CONSTRAINT cliente_locutor_permissao_unique UNIQUE (cliente_id, locutor_id)
);

-- Passo 3: Ativar RLS e criar políticas de acesso
ALTER TABLE public.clientes_locutores_permissoes ENABLE ROW LEVEL SECURITY;

DROP POLICY IF EXISTS "Admins podem gerenciar todas as permissões" ON public.clientes_locutores_permissoes;
CREATE POLICY "Admins podem gerenciar todas as permissões"
ON public.clientes_locutores_permissoes
FOR ALL
USING (EXISTS (SELECT 1 FROM profiles WHERE id = auth.uid() AND role = 'admin'))
WITH CHECK (EXISTS (SELECT 1 FROM profiles WHERE id = auth.uid() AND role = 'admin'));

DROP POLICY IF EXISTS "Usuários podem ler suas próprias permissões (se necessário)" ON public.clientes_locutores_permissoes;
CREATE POLICY "Usuários podem ler suas próprias permissões (se necessário)"
ON public.clientes_locutores_permissoes
FOR SELECT
USING (auth.uid() = cliente_id);


SELECT 'Tabela `clientes_locutores_permissoes` e políticas de segurança criadas com sucesso.' as "Resultado"; 