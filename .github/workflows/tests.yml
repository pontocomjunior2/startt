name: 🧪 Testes Automatizados

on:
  push:
    branches: [ main, develop, feat/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🔍 Executar Testes
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🟢 Configurar Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📦 Instalar dependências
      run: npm ci

    - name: 🔧 Verificar lint
      run: npm run lint

    - name: 🧪 Executar testes unitários
      run: npm run test:run

    - name: 🏗️ Testar build frontend
      run: npm run build:frontend

    - name: 🏗️ Testar build server
      run: npm run build:server

    - name: 📊 Upload cobertura de testes
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build-docker:
    name: 🐳 Testar Build Docker
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🐳 Configurar Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🏗️ Build imagem Docker
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: pontocomaudio:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security:
    name: 🔒 Verificações de Segurança
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🟢 Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Instalar dependências
      run: npm ci

    - name: 🔍 Auditoria de segurança
      run: npm audit --audit-level high

    - name: 🔒 Verificar vulnerabilidades
      run: npx better-npm-audit audit 